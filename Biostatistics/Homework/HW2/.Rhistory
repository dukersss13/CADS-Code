choices = c(1:50)))
),
mainPanel(textOutput("Hello")
)
)
library(dplyr)
library(shiny)
install.packges("dplyr")
install.packages("dplyr")
install.packages("dplyr")
server = function(input, output){
output$plot = renderPlot({
})
}
shinyApp(ui = ui, server = server)
m1 = 190
m1 = 190, m2 = 275
m1 = 190
m2 = 275
n = 45
multinominCL
?multinominCL
?multinominCI
?multinomCI
t.test(x1$x1, conf.level = 0.95)
# Problem 2 ####
# Pg268 5.20 ####
library(ellipse)
m1 = 190
m2 = 275
n = 45
x1 = data.frame("x1" = c(191, 197, 208, 180, 188, 180,210,196,191,179,208,202,200,192,199,186,197,201,190,
209,187,207,178,202,205,190,189,211,216,189,173,194,198,180,190,191,196,207,209,
179,186,174,181,189,188))
x2 = data.frame("x2" = c(284,285,288,273,275,280,283,288,271,257,289,285,272,282,280,266,285,295,
282,305,285,297,268,271,285,280,277,310,305,274,271,280,300,272,292,286,285,
286,303,261,262,245,250,262,258))
x1bar = mean(x1[,1])
x2bar = mean(x2[,1])
cor.coeff = cor(cbind(x1,x2))
plot(ellipse(cor.coeff))
t.test(x1$x1, conf.level = 0.95)
?t.test
confint(x1$x1)
confint(x1)
t.test(x1$x1, method = 'bonferroni')
install.packages("multcomp")
library(multcomp)
?simint
??simint
simint(x1)
?t.test
t.test(x1$x1, conf.level = 0.95)
t.test(x2$x2, conf.level = 0.95)
# 2b ####
tail_t.test = t.test(x1$x1, conf.level = 0.95)
names(tail_t.test)
tail_t.test$conf.int
paste0("The 95% T^2 conf. interval for x1 is ", tail_t.test$conf.int)
paste0("The 95% T^2 conf. interval for x1 is ", tail_t.test$conf.int)
paste0("The 95% T^2 conf. interval for x1 is ", tail_t.test$conf.int)
paste0("The 95% T^2 conf. interval for x1 is ", tail_t.test$conf.int[[1]])
paste0("The 95% T^2 conf. interval for x1 is [", tail_t.test$conf.int[[1]],",",
tail_t.test$conf.int[[2]],"]")
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],4),",",
round(tail_t.test$conf.int[[2]],4),"]")
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),",",
round(tail_t.test$conf.int[[2]],3),"]")
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),",",
round(tail_t.test$conf.int[[2]],3),"]")
wing.t.test = t.test(x2$x2, conf.level = 0.95)
paste0("THe 95% T^2 conf. interval for x2 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test[[2]],3))
wing_t.test = t.test(x2$x2, conf.level = 0.95)
paste0("THe 95% T^2 conf. interval for x2 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test[[2]],3))
paste0("THe 95% T^2 conf. interval for x2 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test[[2]],3),"]")
paste0("THe 95% T^2 conf. interval for x2 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test[[2]],3),"]")
paste0("THe 95% T^2 conf. interval for x2 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test[[2]],3),"]")
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),",",
round(tail_t.test$conf.int[[2]],3),"]")
paste0("The 95% T^2 conf. interval for x1 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test$conf.int[[2]],3),"]")
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),",",
round(tail_t.test$conf.int[[2]],3),"]")
paste0("The 95% T^2 conf. interval for x1 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test$conf.int[[2]],3),"]")
confint(x1$x1)
confint(x1[,1])
c1 = x1$x1
c1
confint(c1)
type(c1)
class(c1)
str(c1)
typeof(c1)
c1
list(c1)
typeof(c1)
c1 = c(191, 197, 208, 180, 188, 180,210,196,191,179,208,202,200,192,199,186,197,201,190,
209,187,207,178,202,205,190,189,211,216,189,173,194,198,180,190,191,196,207,209,
179,186,174,181,189,188)
c1
confint(c1)
?confint
t.test(x1$x1, conf.level = 0.95, method = 'bonferroni')
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),",",
round(tail_t.test$conf.int[[2]],3),"]")
confint(x1)
install.packages("popKorn")
library(popKorn)
bonferroniIntervals(x1$x1, alpha = 0.05)
bonferroniIntervals(x1$x1, alpha = 0.05, k = 1)
bonferroniIntervals(x1$x1, alpha = 0.05, k = 2)
bonferroniIntervals(x1, alpha = 0.05, k = 1)
bonferroniIntervals(x1, alpha = 0.05)
bonferroniIntervals(cbind(x1,x2), alpha = 0.05)
bonferroniIntervals(cbind(x1,x2), alpha = 0.05)
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),",",
round(tail_t.test$conf.int[[2]],3),"]")
paste0("The 95% T^2 conf. interval for x1 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test$conf.int[[2]],3),"]")
# 2c ####
plot(lm(x2~x1))
# 2c ####
plot(lm(x2$x2~x1$x1))
# 2c ####
plot(lm(x2$x2~x1$x1), which = c(2))
# 2c ####
plot(lm(x2$x2~x1$x1), which = 2)
x1 = c(191, 197, 208, 180, 188, 180,210,196,191,179,208,202,200,192,199,186,197,201,190,
209,187,207,178,202,205,190,189,211,216,189,173,194,198,180,190,191,196,207,209,
179,186,174,181,189,188)
x2 =  c(284,285,288,273,275,280,283,288,271,257,289,285,272,282,280,266,285,295,
282,305,285,297,268,271,285,280,277,310,305,274,271,280,300,272,292,286,285,
286,303,261,262,245,250,262,258)
x1bar = mean(x1)
x2bar = mean(x2)
cor.coeff = cor(cbind(x1,x2))
View(cor.coeff)
# 2a ####
plot(ellipse(cor.coeff))
# 2b ####
tail_t.test = t.test(x1$x1, conf.level = 0.95)
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),",",
round(tail_t.test$conf.int[[2]],3),"]")
wing_t.test = t.test(x2$x2, conf.level = 0.95)
paste0("The 95% T^2 conf. interval for x1 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test$conf.int[[2]],3),"]")
# 2b ####
tail_t.test = t.test(x1, conf.level = 0.95)
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),",",
round(tail_t.test$conf.int[[2]],3),"]")
wing_t.test = t.test(x2, conf.level = 0.95)
paste0("The 95% T^2 conf. interval for x1 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test$conf.int[[2]],3),"]")
bonferroniIntervals(cbind(x1,x2), alpha = 0.05)
# Problem 2 ####
# Pg268 5.20 ####
library(ellipse)
library(popKorn)
m1 = 190
m2 = 275
n = 45
x1 = c(191, 197, 208, 180, 188, 180,210,196,191,179,208,202,200,192,199,186,197,201,190,
209,187,207,178,202,205,190,189,211,216,189,173,194,198,180,190,191,196,207,209,
179,186,174,181,189,188)
x2 =  c(284,285,288,273,275,280,283,288,271,257,289,285,272,282,280,266,285,295,
282,305,285,297,268,271,285,280,277,310,305,274,271,280,300,272,292,286,285,
286,303,261,262,245,250,262,258)
x1bar = mean(x1)
x2bar = mean(x2)
cor.coeff = cor(cbind(x1,x2))
# 2a ####
plot(ellipse(cor.coeff))
# 2b ####
tail_t.test = t.test(x1, conf.level = 0.95)
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),",",
round(tail_t.test$conf.int[[2]],3),"]")
wing_t.test = t.test(x2, conf.level = 0.95)
paste0("The 95% T^2 conf. interval for x1 is [", round(wing_t.test$conf.int[[1]],3),",",
round(wing_t.test$conf.int[[2]],3),"]")
bonferroniIntervals(cbind(x1,x2), alpha = 0.05)
# No difference between the 2 intervals for x2 but x1's T^2 Interval is within
# x1's Bonf. Interval
# 2c ####
plot(lm(x2$x2~x1$x1), which = 2)
# 2c ####
plot(lm(x2~x1), which = 2)
# Problem 2 ####
# Pg268 5.20
library(ellipse)
library(popKorn)
library(foreign)
library(dplyr)
m1 = 190
m2 = 275
n = 45
q2.data = read.table("T5-12.dat")
x1 = q2.data$V1
x2 = q2.data$V2
x1bar = mean(x1)
x2bar = mean(x2)
S = cov(q2.data)
S.inv = solve(S)
cor.coeff = cor(cbind(x1,x2))
# 2a ####
plot(ellipse(cor.coeff))
# 2b ####
tail_t.test = t.test(x1, conf.level = 0.95)
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),", ",
round(tail_t.test$conf.int[[2]],3),"]")
wing_t.test = t.test(x2, conf.level = 0.95)
paste0("The 95% T^2 conf. interval for x1 is [", round(wing_t.test$conf.int[[1]],3),", ",
round(wing_t.test$conf.int[[2]],3),"]")
paste0("The 95% T^2 conf. interval for x2 is [", round(wing_t.test$conf.int[[1]],3),", ",
round(wing_t.test$conf.int[[2]],3),"]")
bonferroniIntervals(cbind(x1,x2), alpha = 0.05)
paste0("The 95% T^2 conf. interval for x1 is [", round(tail_t.test$conf.int[[1]],3),", ",
round(tail_t.test$conf.int[[2]],3),"]")
paste0("The 95% T^2 conf. interval for x2 is [", round(wing_t.test$conf.int[[1]],3),", ",
round(wing_t.test$conf.int[[2]],3),"]")
bonferroniIntervals(cbind(x1,x2), alpha = 0.05)
plot(x1, x2)
install.packages("mvdalab")
library(shiny); runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2.R')
?cor
library(shiny); runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2.R')
library(shiny); runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2.R')
as.integer(7.5)
library(shiny); runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
library(MASS)
library(ggplot2)
data(mpg)
head(mpg)
mpg.var = (mpg['cty'] + mpg['hwy'])/2
mpg = cbind(mpg, mpg.var)
names(mpg)[12] = 'avg.mpg'
drop = c("cty","hwy")
df = mpg[,!(names(mpg) %in% drop)]
mlm = lm(avg.mpg ~., data = df)
stepAIC(mlm)
best.lm = lm(avg.mpg~ model + displ + year + cyl + fl + class, data = df)
View(best.lm)
summary(best.lm)
library(MASS)
library(ggplot2)
data(mpg)
force(mpg)
View(mpg)
names(mpg)
summary(mpg$manufacturer)
info()
mpg$manufacturer
str(mpg)
library(shiny); runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
ggplot(filtered3(), aes(x = filtered3()[,2], y = filtered3()[,3])) +
geom_point(size = 3, color = "#56B4E9") +
geom_smooth(method = "lm", se = F, size = 0.8, color = "black") +
labs(title = paste("Pearson Correlation:", round(cor(filtered3()[,2],filtered3()[,3]),4)),
x = names(filtered3()[2]), y = names(filtered3()[3])) +
#theme_bw()
theme(axis.text = element_text(size = 15))
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
runApp('C:/Users/Duker/Desktop/Fall 2020/CS 614/Class Work/Group Module 2/Group Module 2 v2.R')
library(foreign)
library(foreign)
setwd("C:/Users/Duker/Desktop/Fall 2020/CS 624/Homework/HW2")
data = read.table("wgcs.dta")
data = read.table("wcgs.dta")
data = read.table("wcgs.DAT")
data = read.table("wcgs.dat")
data = read.table("wcgs.dta")
data = read.dta("wcgs.dta")
data = read.dta("wcgs.dta")
setwd("C:/Users/Duker/Desktop/Fall 2020/CS 624/Homework/HW2")
data = read.dta("wcgs.dta")
library(foreign)
setwd("C:/Users/Duker/Desktop/Fall 2020/CS 624/Homework/HW2")
data = read.dta("wcgs.dta")
View(data)
str(data)
data = data %>%
select(-c(chd69))
library(dplyr)
setwd("C:/Users/Duker/Desktop/Fall 2020/CS 624/Homework/HW2")
data = read.dta("wcgs.dta")
data = data %>%
select(-c(chd69))
data = read.dta("wcgs.dta")
y = data$chd69
df = data(wcgs)
attach(data)
data = data %>%
select(-c(chd69, typchd69))
attach(data)
summary(data)
nrow(data)
data = data %>%
select(-c(chd69, typchd69)) %>%
drop_na()
data = as.tibble(data) %>%
select(-c(chd69, typchd69)) %>%
drop_na()
data = data %>%
select(-c(chd69, typchd69)) %>%
drop_na()
summary(data)
data = data %>%
select(-c(chd69, typchd69)) %>%
drop_na(any_of(vars))
data = data %>%
select(-c(chd69, typchd69)) %>%
na.omit(data)
data = na.omit(data)
View(data)
attach(data)
summary(data)
mpg = data(mpg)
mpg = data(cars)
force(cars)
View(cars)
data = data %>%
select(-c(chd69, typchd69, id))
library(foreign)
library(dplyr)
setwd("C:/Users/Duker/Desktop/Fall 2020/CS 624/Homework/HW2")
data = read.dta("wcgs.dta")
y = data$chd69
data = data %>%
select(-c(chd69, typchd69, id))
data = na.omit(data)
attach(data)
summary(data)
summary(data)
data = read.dta("wcgs.dta")
y = data$chd69
data = data %>%
select(-c(chd69, typchd69, id))
summary(data)
nrow(data)
data = na.omit(data)
attach(data)
summary(data)
data = read.dta("wcgs.dta")
y = data$chd69
data = data %>%
select(-c(chd69, typchd69, id))
data = na.omit(data)
attach(data)
summary(data)
nrow(data)
str(data)
library(pROC)
library(MASS)
install.packages("pROC")
data = read.dta("wcgs.dta")
y = data$chd69
data = data %>%
select(-c(typchd69, id))
data = na.omit(data)
summary(data)
str(data)
base = glm(chd69 ~., data = data, family = "binomial")
base = glm(chd69 ~., data = data, family = "binomial")
stepAIC(base)
data = read.dta("wcgs.dta")
y = data$chd69
data = data %>%
select(-c(typchd69, id))
data = na.omit(data)
attach(data)
summary(data)
str(data)
base = glm(chd69 ~., data = data, family = "binomial")
stepAIC(base)
stepAIC(base, direction = "forward")
base = glm(chd69 ~., data = data, family = "binomial")
stepAIC(base, direction = "forward")
stepAIC(base, direction = "forward")
library(foreign)
library(dplyr)
library(pROC)
library(MASS)
setwd("C:/Users/Duker/Desktop/Fall 2020/CS 624/Homework/HW2")
data = read.dta("wcgs.dta")
y = data$chd69
data = data %>%
select(-c(typchd69, id))
data = na.omit(data)
attach(data)
summary(data)
str(data)
base = glm(chd69 ~., data = data, family = "binomial")
stepAIC(base, direction = "forward")
data = data %>%
select(-c(typchd69, id))
library(foreign)
library(dplyr)
library(pROC)
library(MASS)
setwd("C:/Users/Duker/Desktop/Fall 2020/CS 624/Homework/HW2")
data = read.dta("wcgs.dta")
y = data$chd69
data = data %>%
select(-c(typchd69, id))
y = data$chd69
y = as.factor(data$chd69)
y
y = factor(data$chd69)
y
?as.factor
?as.factor
data = data %>%
select(-c(typchd69, id))
View(data)
data = data %>%
select(-c(typchd69, id, t1))
library(dplyr)
data = data %>%
select(-c(typchd69, id, t1))
library(foreign)
library(pROC)
library(MASS)
library(dplyr)
setwd("C:/Users/Duker/Desktop/Fall 2020/CS 624/Homework/HW2")
data = read.dta("wcgs.dta")
y = factor(data$chd69)
y = factor(data$chd69)
data = data %>%
select(-c(typchd69, id, t1))
