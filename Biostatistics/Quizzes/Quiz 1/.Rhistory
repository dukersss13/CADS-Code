geom_vline(xintercept = 1, linetype = "dashed") +
scale_y_continuous(limits = c(0,1)) +
theme(legend.direction = "horizontal", legend.position = c(0.4,0.8),
legend.key.size = unit(0.1, "cm"))
ggplot(data = df.3, mapping = aes(x = Lag, y = value, group = L1))+
geom_line(size = 1, alpha = 0.5, aes(color = L1)) +
geom_point(size = 1.5, aes(color = L1, shape = L1)) +
labs(y = "Probablity", color = "State", shape = "State") +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_y_continuous(limits = c(0,1)) +
theme(legend.direction = "horizontal", legend.position = c(0.4,0.9),
legend.key.size = unit(0.1, "cm"))
ggplot(data = df.3, mapping = aes(x = Lag, y = value, group = L1))+
geom_line(size = 1, alpha = 0.5, aes(color = L1)) +
geom_point(size = 1.5, aes(color = L1, shape = L1)) +
labs(y = "Probablity", color = "State", shape = "State") +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_y_continuous(limits = c(0,1)) +
theme(legend.direction = "horizontal", legend.position = c(0.4,0.9),
legend.key.size = unit(0.05, "cm"))
ggplot(data = df.3, mapping = aes(x = Lag, y = value, group = L1))+
geom_line(size = 1, alpha = 0.5, aes(color = L1)) +
geom_point(size = 1.5, aes(color = L1, shape = L1)) +
labs(y = "Probablity", color = "State", shape = "State") +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_y_continuous(limits = c(0,1)) +
theme(legend.direction = "horizontal", legend.position = c(0.4,0.95),
legend.key.size = unit(0.05, "cm"))
# Problem 2 ####
df.2 = data.frame("x" = seq(-4,2),
"+1" = vv$diagconfig[1,],
"0" = vv$diagconfig[2,],
"-1" = vv$diagconfig[3,],
check.names = FALSE)
df.2 = melt(df.2, id.vars =  "x")
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value")
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal")
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(-4,0.2))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.2,0.2))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.2,0.8))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.3,0.8))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.3,0.85))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.25,0.85))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.25,0.85),
legend.key.size = unit(0.05, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.25,0.85),
legend.key.size = unit(0.03, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.25,0.85),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.2,0.85),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.2,1),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.2,0.9),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.2,0.95),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.15,0.99),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.999),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.95),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
scale_color_manual(name = "Pos", color = c("red", "green", "blue")) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(col = variable)) +
scale_color_manual(name = "Pos") +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2) +
scale_color_manual(name = "Pos") +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(color = variable)) +
geom_point(size = 2) +
scale_color_manual(name = "Pos") +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, color = variable) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
names(myColors) <- levels(dat$grp)
names(myColors) <- levels(df.2$variable)
names(myColors) <-
colScale <- scale_colour_manual(name = "grp",values = levels(df.2$variable))
colScale <- scale_colour_manual(name = "grp",values = levels(df.2$variable))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm")) + colScale
levels(df.2$variable)
scale_colour_manual(name = "grp",values = levels(df.2$variable))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos",values = levels(df.2$variable)) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos", colors = c("red", "green", "blue"),
values = levels(df.2$variable)) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos", color = c("red", "green", "blue"),
values = levels(df.2$variable)) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos", values = c("red", "green", "blue"),
values = levels(df.2$variable)) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos", values = c("red", "green", "blue")) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos") +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos", values = variable) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos", values = levels(df.2$variable)) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos", values = c("r", "g", "b")) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos", values = c("red", "green", "blue")) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos", values = c("green", "blue", "red")) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos", alpha = 0.5,
values = c("green", "blue", "red")) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, alpha = 0.5, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos",
values = c("green", "blue", "red")) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, alpha = 0.5, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos",
values = c("green", "blue", "red")) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
ggplot(data = df.2, mapping = aes(x = x, y = value)) +
geom_line(aes(group = variable, color = variable)) +
geom_point(size = 2, alpha = 0.6, aes(color = variable)) +
labs(x = "Iteration Offset from A", y = "Mean Value") +
scale_colour_manual(name = "Pos",
values = c("green", "blue", "red")) +
theme(legend.direction = "horizontal", legend.position = c(0.1,0.98),
legend.key.size = unit(0.02, "cm"))
vv
vv$diagconfig
vv$diagconfig[1,]
library(MASS)
data(mpg)
library(ggplot2)
data(mpg)
force(mpg)
View(mpg)
head(mpg)
mpg.var = mpg['cty']
mpg.var = mean(c(mpg['cty'], mpg['hwy']))
mpg.var = (mpg['cty'] + mpg['hwy'])/2
View(mpg.var)
# 1b ####
dim(mpg)
names(mpg)
summary(mpg)
str(mpg)
attach(mpg)
hist(mpg)
hist(mpg ~.)
for (i in seq(1, ncol(mpg))){
hist(mpg[i,])
}
hist(displ)
hist(displ, freq = F)
hist(year, freq = F)
hist(cyl, freq = F)
boxplot(manufacturer)
boxplot(mpg~manufacturer)
boxplot(mpg.var~manufacturer)
mpg.var = (mpg['cty'] + mpg['hwy'])/2
mpg.var = data.frame((mpg['cty'] + mpg['hwy'])/2)
boxplot(mpg.var~manufacturer)
(mpg)
attach(mpg)
boxplot(mpg.var~manufacturer)
boxplot(mpg.var~manufacturer)
library(MASS)
library(ggplot2)
data(mpg)
# Problem 1 ####
# 1a ####
head(mpg)
mpg.var = data.frame((mpg['cty'] + mpg['hwy'])/2)
# 1b ####
dim(mpg)
names(mpg)
summary(mpg)
str(mpg)
attach(mpg)
hist(displ, freq = F)
hist(year, freq = F)
hist(cyl, freq = F)
boxplot(class~manufacturer)
boxplot(manufacturer~mpg.var)
?boxplot
boxplot(mpg)
boxplot(data)
cbind(mpg, mpg.var)
mpg = cbind(mpg, mpg.var)
data(mpg)
# 1a ####
head(mpg)
mpg.var = data.frame((mpg['cty'] + mpg['hwy'])/2)
mpg = cbind(mpg, mpg.var)
boxplot(mpg.var~manufacturer)
mpg.var = (mpg['cty'] + mpg['hwy'])/2
mpg = cbind(mpg, mpg.var)
# 1b ####
dim(mpg)
names(mpg)
summary(mpg)
str(mpg)
attach(mpg)
hist(displ, freq = F)
hist(year, freq = F)
hist(cyl, freq = F)
boxplot(mpg.var~manufacturer)
boxplot(mpg.var~cyl)
View(mpg)
?cbind
data(mpg)
# 1a ####
head(mpg)
mpg.var = (mpg['cty'] + mpg['hwy'])/2
mpg = cbind(mpg, mpg.var)
names(mpg)[(nrow(mpg))] = 'avg.mpg'
names(mpg)[12] = 'avg.mpg'
View(mpg)
# 1b ####
dim(mpg)
names(mpg)
summary(mpg)
str(mpg)
attach(mpg)
hist(displ, freq = F)
hist(year, freq = F)
hist(cyl, freq = F)
boxplot(mpg.var~cyl)
boxplot(avg.mpg~cyl)
boxplot(avg.mpg~ manufacturer)
boxplot(avg.mpg ~ trans)
# 1c ####
summary(model)
boxplot(avg.mpg ~ model)
summary(mpg)
str(mpg)
boxplot(avg.mpg ~ cyl)
boxplot(avg.mpg ~ manufacturer)
mlm = lm(avg.mpg ~., data = mpg)
stepAIC(mlm)
stepAIC(mlm)
best.lml = lm(avg.mpg ~ manufacturer + model + displ + year + cyl + trans +
drv + cty + hwy + fl + class)
best.lm = lm(avg.mpg ~ manufacturer + model + displ + year + cyl + trans +
drv + cty + hwy + fl + class)
# 1e ####
plot(best.lm, which = c(1))
plot(best.lm, which = c(2))
plot(best.lm, which = c(3))
plot(best.lm, which = c(5))
# 1e ####
plot(best.lm, which = c(1))
library(MASS)
library(ggplot2)
data(mpg)
# 1a ####
head(mpg)
mpg.var = (mpg['cty'] + mpg['hwy'])/2
mpg = cbind(mpg, mpg.var)
names(mpg)[12] = 'avg.mpg'
drop <- c("cty","hwy")
df = mpg[,!(names(mpg) %in% drop)]
View(df)
# 1b ####
dim(df)
names(df)
summary(df)
str(df)
attach(df)
hist(displ, freq = F)
hist(year, freq = F)
hist(cyl, freq = F)
boxplot(avg.mpg ~ cyl)
boxplot(avg.mpg ~ manufacturer)
boxplot(avg.mpg ~ trans)
boxplot(avg.mpg ~ model)
# 1c ####
boxplot(avg.mpg ~ manufacturer)
mlm = lm(avg.mpg ~., data = df)
stepAIC(mlm)
best.lm = lm(avg.mpg ~ model + displ + year + cyl + fl)
# 1e ####
plot(best.lm, which = c(1))
plot(best.lm, which = c(5))
plot(best.lm, which = c(4))
# 1e ####
plot(best.lm, which = c(1))
plot(best.lm, which = c(2))
plot(best.lm, which = c(3))
plot(best.lm, which = c(1))
plot(best.lm, which = c(5))
plot(best.lm, which = c(3))
plot(best.lm, which = c(5))
summary(best.lm)
summary(mlm)
names(summary(best.lm))
summary(best.lm)$coefficients
summary(lm(avg.mpg~ model))
summary(lm(avg.mpg~ cyl))
summary(best.lm)
stepAIC(mlm)
# 1g ####
stepAIC(best.lm, direction = "both")
# 1g ####
stepAIC(best.lm, direction = "both")
stepAIC(mlm)
best.lm = lm(avg.mpg ~ model + displ + year + cyl + fl, data = df)
View(best.lm)
summary(best.lm)
stepAIC(best.lm, direction = "both")
best.lm2 = lm(avg.mpg ~ model + displ + year + cyl + fl, data = df)
stepAIC(mlm)
best.lm = lm(model + displ + year + cyl + fl + class, data = df)
plot(best.lm, which = c(1))
plot(best.lm, which = c(2))
plot(best.lm, which = c(3))
plot(best.lm, which = c(5))
stepAIC(best.lm, direction = "both")
best.lm2 = lm(avg.mpg ~ model + displ + year + cyl + fl, data = df)
best.lm2 = lm(avg.mpg ~ model + displ + year + cyl + fl, data = df)
plot(best.lm2, which = c(1))
plot(best.lm2, which = c(3))
plot(best.lm2, which = c(5))
summary(best.lm2)
summary(best.lm)
rmarkdown::render("Quiz 1. R", "pdf_document")
setwd("C:/Users/Duker/Desktop/Fall 2020/CS 624/Quizzes/Quiz 1")
rmarkdown::render("Quiz 1. R", "pdf_document")
