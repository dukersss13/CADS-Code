# plot2 ####
output$plot2 = renderPlot({
if(is.null(input$percentSelect1)) return(NULL)
if(is.null(input$percentSelect2)) return(NULL)
if(is.null(input$countySelect2)) return(NULL)
ggplot(consolidate.df(), aes(x = consolidate.df()[,3] , y = ..density..)) +
geom_density(aes(color = county, fill = county), alpha = 0.2, size = 0.7) +
labs(x = names(consolidate.df())[3], y = "Density") +
guides(fill = guide_legend(title= "County"),
color = guide_legend(title = "County")) + theme_bw() +
theme(axis.text = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 11))
})
# Kendall Coeff Text ####
output$kendall = renderText({
if(is.null(input$percentSelect1)) return(NULL)
if(is.null(input$percentSelect2)) return(NULL)
if(is.null(input$countySelect3)) return(NULL)
kd = round(cor(filtered3()[,2],filtered3()[,3],method = "kendall"),4)
paste("Kendall Rank Coefficient:", kd)
})
# t.test1 text ####
output$t_test1 = renderText({
if(is.null(input$countySelect2)) return(NULL)
if(is.null(input$percentSelect1)) return(NULL)
if(is.null(input$percentSelect2)) return(NULL)
test = t.test(consolidate.df()[,2]~county,
data = consolidate.df(), paired = FALSE)
if(test$p.value > 0.05){
paste("The P-value of the 2-sample t-test is:", round(test$p.value,2), "which suggests
that there is no sufficient evidence that the", input$percentSelect1, "between
the two counties are statistically different at a significance level
of 0.05.")
} else{
paste("The P-value of the 2-sample t-test is:", round(test$p.value,2), "which suggests
that the", input$percentSelect1, "between the two counties are
statistically different at a significance level of 0.05.")
}
})
# t.test2 text ####
output$t_test2 = renderText({
if(is.null(input$countySelect2)) return(NULL)
if(is.null(input$percentSelect1)) return(NULL)
if(is.null(input$percentSelect2)) return(NULL)
test = t.test(consolidate.df()[,3]~county,
data = consolidate.df(), paired = FALSE)
if(test$p.value > 0.05){
paste("The P-value of the 2-sample t-test is:", round(test$p.value,2), "which suggests
that there is no sufficient evidence that the", input$percentSelect2, "between
the two counties are statistically different at a significance level
of 0.05.")
} else{
paste("The P-value of the 2-sample t-test is:", round(test$p.value,2), "which suggests
that the", input$percentSelect2, "between the two counties are
statistically different at a significance level of 0.05.")
}
})
# Pearson Scatter Plot ####
output$correlation = renderPlot({
if(is.null(input$percentSelect1)) return(NULL)
if(is.null(input$percentSelect2)) return(NULL)
if(is.null(input$countySelect3)) return(NULL)
ggplot(filtered3(), aes(x = filtered3()[,2], y = filtered3()[,3])) +
geom_point(size = 3, color = "#56B4E9") +
geom_smooth(method = "lm", se = F, size = 0.8, color = "black") +
labs(title = paste("Police-Civilian Use of Force in", input$countySelect3),
subtitle = paste("with Pearson Correlation:", round(cor(filtered3()[,2],filtered3()[,3]),4)),
x = names(filtered3()[2]), y = names(filtered3()[3])) +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 13, hjust = 0.5))
})
# Kendall Matrix ####
output$corrMatrix = renderPlot({
if(is.null(input$countySelect3)) return(NULL)
filtered4 = data %>%
filter(county %in% input$countySelect3) %>%
select(-county)
filtered4 = filtered4[, colSums(filtered4 != 0) > 0]
ggcorrplot(cor(filtered4[1:as.integer(length(filtered4)/2)],
filtered4[as.integer(length(filtered4)/2+1):length(filtered4)],
method = "kendall"),
hc.order = T, lab= T,
ggtheme = ggplot2::theme_light, outline.color = "white",
title = paste("Police(x) - Civilian(y) Violence in", input$countySelect3,
"\n (Kendall Rank Correlation Matrix)"),
colors = c("#6D9EC1", "white", "#E46726"),
legend.title = "Kendall Correlation") +
theme(plot.title = element_text(hjust = 0.5))
})
}
shinyApp(ui = ui, server = server)
M = 9000
sd = 260
n = 169
?t.test
?confint
library(dplyr)
install.packages("AER")
library(MASS)
library(AER)
data = read.csv(url("http://lib.stat.cmu.edu/datasets/boston"))
data = read.table(url("http://lib.stat.cmu.edu/datasets/boston"))
data(BostonHousing)
install.packages("mlbench")
data(BostonHousing)
library(mlbench)
data(BostonHousing)
View(BostonHousing)
d = data(BostonHousing)
d
data(BostonHousing)
head(BostonHousing)
dim(BostonHousing)
names(BostonHousing)
head(BostonHousing)
head(BostonHousing)
names(BostonHousing)
attach(BostonHousing)
base = glm(medv~., data = BostonHousing, family = "binomial")
head(BostonHousing)
str(BostonHousing)
threshold = mean(medv)
medv = ifelse(medv == 0 if medv <= threshold, 1)
medv = ifelse(medv == 0, medv <= threshold, 1)
threshold
BostonHousing
medv
medv
medv1 = ifelse(medv == 0, medv <= threshold, 1)
data(BostonHousing)
dim(BostonHousing)
names(BostonHousing)
attach(BostonHousing)
threshold = mean(medv)
medv1 = ifelse(medv == 0, medv <= threshold, 1)
medv
medv1
library(dplyr)
library(MASS)
library(AER)
library(mlbench)
data(BostonHousing)
dim(BostonHousing)
names(BostonHousing)
attach(BostonHousing)
threshold = mean(medv)
medv1 = ifelse(medv == 0, medv <= threshold, 1)
base = glm(medv~., data = BostonHousing, family = "binomial")
library(dplyr)
library(MASS)
library(AER)
library(mlbench)
data(BostonHousing)
dim(BostonHousing)
names(BostonHousing)
attach(BostonHousing)
threshold = mean(medv)
medv1 = ifelse(medv == 0, medv <= threshold, 1)
#base = glm(medv~., data = BostonHousing, family = "binomial")
medv
mmedv
medv1
g = data(BostonHousing)
names(g)
print(g)
colNames(g)
colnames(g)
data(BostonHousing)
dim(BostonHousing)
names(BostonHousing)
for (i in medv){
if (i >= threshold){
i == 1
} else {i == 0}
}
library(dplyr)
library(MASS)
library(AER)
library(mlbench)
data(BostonHousing)
dim(BostonHousing)
names(BostonHousing)
attach(BostonHousing)
threshold = mean(medv)
medv1 = ifelse(medv == 0, medv <= threshold, 1)
for (i in medv){
if (i >= threshold){
i == 1
} else {i == 0}
}
View(BostonHousing)
medv
d = get(data(BostonHousing))
dim(d)
names(d)
library(dplyr)
library(MASS)
library(AER)
library(mlbench)
d = get(data(BostonHousing))
dim(d)
names(d)
attach(d)
threshold = mean(medv)
medv1 = ifelse(medv == 0, medv <= threshold, 1)
medv1
for (i in medv){
if (i >= threshold){
i == 1
} else {i == 0}
}
library(dplyr)
library(MASS)
library(AER)
library(mlbench)
d = get(data(BostonHousing))
dim(d)
names(d)
attach(d)
threshold = mean(medv)
medv
head(medv)
head(d)
threshold
bin_i = seq(0,length(medv))
bin_i
bin_i = c()
bin_i = c()
for (i in medv){
if (i >= threshold){
bin_i == append(bin_i,1)}
else {bin_i == append(bin_i,0)}
}
bin_i
bin_i
threshold = mean(medv)
bin_i = list()
for (i in medv){
if (i >= threshold){
bin_i == append(1,bin_i)}
else {bin_i == append(0,bin_i)}
}
bin_i
bin_i
for (i in medv){
if (i >= threshold){
bin_i == append(1, bin_i, after= length(bin_i))}
else {bin_i == append(0, bin_i, after= length(bin_i))}
}
bin_i
bin_i = list()
for (i in medv){
if (i >= threshold){
bin_i == append(1, bin_i, after= length(bin_i))}
else {bin_i == append(0, bin_i, after= length(bin_i))}
}
bin_i
bin_i = list()
for (i in medv){
print(i)
}
bin_i = append(bin_i, 1)
for (i in medv){
if (i >= threshold){
bin_i == append(bin_i, 1, after= length(bin_i))}
else {bin_i == append(bin_i, 0, after= length(bin_i))}
}
bin_i = list()
for (i in medv){
if (i >= threshold){
bin_i == append(bin_i, 1, after= length(bin_i))}
else {bin_i == append(bin_i, 0, after= length(bin_i))}
}
bin_i
bin_i
bin_i = seq()
for (i in medv){
if (i >= threshold){
bin_i == append(bin_i, 1, after= length(bin_i))}
else {bin_i == append(bin_i, 0, after= length(bin_i))}
}
bin_i
for (i in medv) {print(i)}
m = ifelse(d$medv >= threshold, 1, 0)
m
d$medv = ifelse(d$medv >= threshold, 1, 0)
head(d)
base = glm(medv~., data = BostonHousing, family = "binomial")
base = glm(medv~., data = d, family = "binomial")
final1 = stepAIC(base, trace = 0)
summary(final1)
final1
summary(final1)
summary(final1)
final1 = stepAIC(base)
str(d)
summary(d)
View(d)
str(d)
summary(d)
final1 = stepAIC(base)
summary(final1)
summary(final1)
paste0(round(exp(summary(final1)$coef[,1]),3))
paste0(round(((exp(summary(final1)$coef[,1]))-1)*100,3),"%")
exp(summary(final1)$coef[,1])
exp(summary(final1)$round(coef[,1],3))
exp(summary(final1)$coef[,1])
round(exp(summary(final1)$coef[,1]),3)
paste0(round(((exp(summary(final1)$coef[,1]))-1)*100,3),"%")
paste0(round(exp(summary(final1)$coef[,1]),3))
round(exp(summary(final1)$coef[,1]),3)
paste0(round(((exp(summary(final1)$coef[,1]))-1)*100,3),"%")
round(exp(summary(final1)$coef[,1]),3)
library(ROSE)
pp1 = predict(final1, type = "response")
roc.curve(medv, pp1)
roc.curve(d$medv, pp1)
attach(d)
roc.curve(medv, pp1)
roc.curve(medv, pp1)
View(d)
d2 = read.table("seizure.dta")
d2 = read.table("seizure.dat")
setwd("C:/Users/Duker/Desktop/Fall 2020/CS 624/Quizzes/Practice Quiz 2")
d2 = read.dta("seizure.dta")
library(foreign)
d2 = read.dta("seizure.dta")
View(d2)
d2 = read.dta("seizure.dta")
head(d2)
d2 <- d2[-c(1)]
head(d2)
unique(d2$trt)
str(d)
str(d2)
d2$trt <- factor(d2$trt)
head(d2)
summary(d2)
head(d2)
base2 <- glm(y~.,data=d2,family=poisson)
final2 = stepAIC(base2)
summary(final2)
1-pchisq(final2$deviance,final2$df.residual)
#interpreting model coefficients:
paste0(round(exp(summary(final2)$coef[,1]),3)) #"the expected number (frequency) of y-var is ____ times higher (>1) or lower (<1) for people who are non-baseline x-var than baseline x-var."
#"the expected number of seizures is 0.835 times lower for people who age by a year"
paste0(round(((exp(summary(final2)$coef[,1]))-1)*100,3),"%")
#interpreting model coefficients:
paste0(round(exp(summary(final2)$coef[,1]),3))
(exp(summary(final2)$coef[,1]
(exp(summary(final2)$coef[,1])
(exp(summary(final2)$coef[,1])
(exp(summary(final2)$coef[,1])
(exp(summary(final2)$coef[,1])
exp(summary(final2)$coef[,1])
#For trt: "the expected number of seizures is 0.835 times lower for people who are trt"
#For age: "the expected number of seizures is 0.985 times lower for people who age by a year"
paste0(round(((exp(summary(final2)$coef[,1]))-1)*100,3),"%")
#running a dispersion test now:
dispersiontest(final2)
#running a dispersion test:
dispersiontest(final2)
library(dplyr)
library(MASS)
library(AER)
library(ROSE)
library(mlbench)
library(foreign)
# Problem 1 ####
d = get(data(BostonHousing))
dim(d)
names(d)
threshold = mean(medv)
d$medv = ifelse(d$medv >= threshold, 1, 0)
head(d)
attach(d)
base = glm(medv~., data = d, family = "binomial")
final1 = stepAIC(base)
summary(final1)
paste0(round(exp(summary(final1)$coef[,1]),3))
paste0(round(((exp(summary(final1)$coef[,1]))-1)*100,3),"%")
round(exp(summary(final1)$coef[,1]),3)
pp1 = predict(final1, type = "response")
roc.curve(medv, pp1)
# Problem 2 ####
d2 = read.dta("seizure.dta")
d2 <- d2[-c(1)]
d2$trt <- factor(d2$trt)
head(d2)
base2 <- glm(y~.,data=d2,family=poisson)
final2 = stepAIC(base2)
summary(final2)
1-pchisq(final2$deviance,final2$df.residual) #goodness of fit test
#p = 0, so bad model
#interpreting model coefficients:
paste0(round(exp(summary(final2)$coef[,1]),3))
#For trt: "the expected number of seizures is 0.835 times lower for people who are trt"
#For age: "the expected number of seizures is 0.985 times lower for people who age by a year"
paste0(round(((exp(summary(final2)$coef[,1]))-1)*100,3),"%")
#"For age: if someone is a trt, the expected number of seizures is decreased by 16.5%"
#For trt: "if someone is a year older, the expected number of seizures is decreased by 1.5%"
#running a dispersion test:
dispersiontest(final2)
library(dplyr)
library(MASS)
library(AER)
library(ROSE)
library(mlbench)
library(foreign)
# Problem 1 ####
d = get(data(BostonHousing))
dim(d)
names(d)
threshold = mean(medv)
d$medv = ifelse(d$medv >= threshold, 1, 0)
head(d)
attach(d)
base = glm(medv~., data = d, family = "binomial")
final1 = stepAIC(base)
summary(final1)
paste0(round(exp(summary(final1)$coef[,1]),3))
paste0(round(((exp(summary(final1)$coef[,1]))-1)*100,3),"%")
round(exp(summary(final1)$coef[,1]),3)
pp1 = predict(final1, type = "response")
roc.curve(medv, pp1)
# Problem 2 ####
d2 = read.dta("seizure.dta")
d2 <- d2[-c(1)]
d2$trt <- factor(d2$trt)
head(d2)
base2 <- glm(y~.,data=d2,family=poisson)
final2 = stepAIC(base2)
summary(final2,trace=0)
1-pchisq(final2$deviance,final2$df.residual) #goodness of fit test
#p = 0, so bad model
#interpreting model coefficients:
paste0(round(exp(summary(final2)$coef[,1]),3))
#For trt: "the expected number of seizures is 0.835 times lower for people who are trt"
#For age: "the expected number of seizures is 0.985 times lower for people who age by a year"
paste0(round(((exp(summary(final2)$coef[,1]))-1)*100,3),"%")
#"For age: if someone is a trt, the expected number of seizures is decreased by 16.5%"
#For trt: "if someone is a year older, the expected number of seizures is decreased by 1.5%"
#running a dispersion test:
dispersiontest(final2)
library(dplyr)
library(MASS)
library(AER)
library(ROSE)
library(mlbench)
library(foreign)
# Problem 1 ####
d = get(data(BostonHousing))
dim(d)
names(d)
threshold = mean(medv)
d$medv = ifelse(d$medv >= threshold, 1, 0)
head(d)
attach(d)
base = glm(medv~., data = d, family = "binomial")
final1 = stepAIC(base)
summary(final1)
paste0(round(exp(summary(final1)$coef[,1]),3))
paste0(round(((exp(summary(final1)$coef[,1]))-1)*100,3),"%")
round(exp(summary(final1)$coef[,1]),3)
pp1 = predict(final1, type = "response")
roc.curve(medv, pp1)
# Problem 2 ####
d2 = read.dta("seizure.dta")
d2 <- d2[-c(1)]
d2$trt <- factor(d2$trt)
head(d2)
base2 <- glm(y~.,data=d2,family=poisson)
final2 = stepAIC(base2,trace=0)
summary(final2)
1-pchisq(final2$deviance,final2$df.residual) #goodness of fit test
#p = 0, so bad model
#interpreting model coefficients:
paste0(round(exp(summary(final2)$coef[,1]),3))
#For trt: "the expected number of seizures is 0.835 times lower for people who are trt"
#For age: "the expected number of seizures is 0.985 times lower for people who age by a year"
paste0(round(((exp(summary(final2)$coef[,1]))-1)*100,3),"%")
#"For age: if someone is a trt, the expected number of seizures is decreased by 16.5%"
#For trt: "if someone is a year older, the expected number of seizures is decreased by 1.5%"
#running a dispersion test:
dispersiontest(final2)
final3 <- glm(final2$call,family=quasipoisson,data=d)
final3 <- glm(final2$call,family=quasipoisson,data=d2)
summary(final3)
#interpreting final3 model coefficients:
#note: no vars were considered significant
paste0(round(exp(summary(final3)$coef[,1]),3))
summary(final3)
1-pchisq(final2$deviance,final2$df.residual) #goodness of fit test
#interpreting final2 model coefficients:
#note: no vars were considered significant
paste0(round(exp(summary(final2)$coef[,1]),3))
#For trt: "the expected number of seizures is 0.835 times lower for people who are trt"
#For age: "the expected number of seizures is 0.985 times lower for people who age by a year"
paste0(round(((exp(summary(final2)$coef[,1]))-1)*100,3),"%")
#running a dispersion test:
dispersiontest(final2)
final3 <- glm(final2$call,family=quasipoisson,data=d2)
summary(final3)
dispersiontest(final3)
summary(final3)
