n = NULL
delta_list = c()
yearlyTable = df2 %>%
filter(year == 1952)
medianGDP = median(yearlyTable$gdp)
for (gdp in yearlyTable$gdp){
delta = abs(gdp - medianGDP)
delta_list = append(delta_list, delta)
}
index = which(delta_list == min(delta_list))
yearlyTable[index,]
n = rbind(n, yearlyTable[index,])
n
delta_list = c()
yearlyTable = df2 %>%
filter(year == 1957)
medianGDP = median(yearlyTable$gdp)
for (gdp in yearlyTable$gdp){
delta = abs(gdp - medianGDP)
delta_list = append(delta_list, delta)
}
index = which(delta_list == min(delta_list))
yearlyTable[index,]
n = rbind(n, yearlyTable[index,])
n
years
#8)
df3 = data.frame()
years = unique(df2$year)
for (i in years){
yearlyTable = df2 %>%
filter(year == i)
medianGDP = median(yearlyTable$gdp)
delta_list = c()
for (gdp in yearlyTable$gdp){
delta = abs(gdp - medianGDP)
delta_list = append(delta_list, delta)
}
index = which(delta_list == min(delta_list))
df3 = rbind(df3, yearlyTable[index,])
}
unique(df3)
#9)
continents = unique(df2$continent)
df4 = data.frame()
#9)
continents = unique(df2$continent)
df4 = data.frame()
for (ii in continents){
yearlyTable = df2 %>%
filter(continent == ii)
medianGDP = median(yearlyTable$gdp)
delta_list = c()
for (gdp in yearlyTable$gdp){
delta = abs(gdp - medianGDP)
delta_list = append(delta_list, delta)
}
index = which(delta_list == min(delta_list))
df4 = rbind(df4, yearlyTable[index,])
}
unique(df4)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tibble)
library(dplyr)
ccA = read.csv("ccA.csv")
ccB = read.csv("ccB.csv")
gdp = read.csv("gdp.csv")
str(ccA)
str(ccB)
str(gdp)
#5)
df = merge(ccA, ccB, all = TRUE)
str(df)
#6)
df2 = cbind(df, gdp)
str(df2)
#7)
filter_df2 = df2 %>%
filter(year > 1980, gdp > 20000)
#8)
df3 = data.frame()
years = unique(df2$year)
for (i in years){
yearlyTable = df2 %>%
filter(year == i)
medianGDP = median(yearlyTable$gdp)
delta_list = c()
for (gdp in yearlyTable$gdp){
delta = abs(gdp - medianGDP)
delta_list = append(delta_list, delta)
}
index = which(delta_list == min(delta_list))
df3 = rbind(df3, yearlyTable[index,])
}
unique(df3)
#9)
continents = unique(df2$continent)
df4 = data.frame()
for (ii in continents){
yearlyTable = df2 %>%
filter(continent == ii)
medianGDP = median(yearlyTable$gdp)
delta_list = c()
for (gdp in yearlyTable$gdp){
delta = abs(gdp - medianGDP)
delta_list = append(delta_list, delta)
}
index = which(delta_list == min(delta_list))
df4 = rbind(df4, yearlyTable[index,])
}
unique(df4)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tibble)
library(dplyr)
ccA = read.csv("ccA.csv")
ccB = read.csv("ccB.csv")
gdp = read.csv("gdp.csv")
str(ccA)
str(ccB)
str(gdp)
# Task 5
df = merge(ccA, ccB, all = TRUE)
str(df)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tibble)
library(dplyr)
ccA = read.csv("ccA.csv")
ccB = read.csv("ccB.csv")
gdp = read.csv("gdp.csv")
str(ccA)
str(ccB)
str(gdp)
# Task 5
df = merge(ccA, ccB, all = TRUE)
str(df)
View(df)
library(tibble)
library(dplyr)
ccA = read.csv("ccA.csv")
ccB = read.csv("ccB.csv")
gdp = read.csv("gdp.csv")
str(ccA)
str(ccB)
str(gdp)
# Task 5
df = merge(ccA, ccB, all = TRUE)
str(df)
load("map.coords.RData")
## Problem 1
left = merge(df, coords)
View(left)
## Problem 1
left = merge(df, coords, all.x = TRUE)
View(left)
# Task 5
df = merge(ccA, ccB, all = TRUE)
str(df)
## Problem 1
left = merge(df, coords, all.x = TRUE)
right = merge(df, coords, all.y = TRUE)
inner = merge(df, coords)
inner = merge(df, coords, all = FALSE)
View(inner)
View(right)
View(df)
rmarkdown::render("HW3.R")
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tibble)
library(dplyr)
load("map.coords.RData")
ccA = read.csv("ccA.csv")
ccB = read.csv("ccB.csv")
gdp = read.csv("gdp.csv")
str(ccA)
str(ccB)
str(gdp)
# Task 5
df = merge(ccA, ccB, all = TRUE)
str(df)
## Problem 1
left = merge(df, coords, all.x = TRUE)
right = merge(df, coords, all.y = TRUE)
inner = merge(df, coords, all = FALSE)
rmarkdown::render("HW3.R")
rmarkdown::render("HW3.R")
rmarkdown::render("HW3.R")
install.packages(tinytex)
install.packages("tinytex")
dimensions(left)
dim(left)
dim(right)
dim(inner)
ccB = read.csv("ccB.csv")
gdp = read.csv("gdp.csv")
df = merge(ccA, ccB, all = TRUE)
dim(left)
dim(right)
dim(inner)
?quantile
View(df)
# Task 5
df = merge(ccA, ccB, all = TRUE)
df2 = cbind(df, gdp)
# Problem 1 ####
left = merge(df2, coords, all.x = TRUE)
right = merge(df2, coords, all.y = TRUE)
inner = merge(df2, coords, all = FALSE)
dim(left)
dim(right)
dim(inner)
quantile(inner$gdp)
df2 = cbind(df, gdp)
inner = merge(df2, coords, all = FALSE)
dim(inner)
### Problem 1
Inner merge
```{r}
inner = merge(df2, coords, all = FALSE)
dim(inner)
```
Left merge
```{r}
left = merge(df2, coords, all.x = TRUE)
dim(left)
```
Right merge
```{r}
right = merge(df2, coords, all.y = TRUE)
dim(right)
```
There's a clear difference in the # of rows after each merge. This is obviously caused by the number of unmatched rows merged between the data frames, depending on each method.
### Problem 2
# 2a)
quartiles = quantile(inner$gdp)
quartiles
# 2b)
findInterval(quartiles)
# 2b)
gdp.q = findInterval(quartiles)
gdp.q
quartiles
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tibble)
library(dplyr)
load("map.coords.RData")
ccA = read.csv("ccA.csv")
ccB = read.csv("ccB.csv")
gdp = read.csv("gdp.csv")
# Task 5
df = merge(ccA, ccB, all = TRUE)
df2 = cbind(df, gdp)
# Problem 1 ####
left = merge(df2, coords, all.x = TRUE)
right = merge(df2, coords, all.y = TRUE)
inner = merge(df2, coords, all = FALSE)
dim(left)
dim(right)
dim(inner)
# Problem 2 ####
# 2a)
quartiles = quantile(inner$gdp)
quartiles
# 2b)
gdp.q = findInterval(quartiles)
gdp.q
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tibble)
library(dplyr)
load("map.coords.RData")
ccA = read.csv("ccA.csv")
ccB = read.csv("ccB.csv")
gdp = read.csv("gdp.csv")
# Task 5
df = merge(ccA, ccB, all = TRUE)
df2 = cbind(df, gdp)
# Problem 1 ####
left = merge(df2, coords, all.x = TRUE)
right = merge(df2, coords, all.y = TRUE)
inner = merge(df2, coords, all = FALSE)
dim(left)
dim(right)
dim(inner)
# Problem 2 ####
# 2a)
quartiles = quantile(inner$gdp)
quartiles
# 2b)
gdp.q = findInterval(quartiles)
gdp.q
names(quartiles)
# 2b)
findInterval(gdp$"0%")
# 2b)
findInterval(quartiles$"0%")
# 2b)
findInterval(quartiles$'0%')
# 2b)
findInterval(quartiles[0])
quartiles[[0]]
quartiles[[1]]
quartiles
# 2b)
findInterval(quartiles[1])
# 2b)
findInterval(quartiles[[1]])
quartiles
typeof(quartiles)
c(quartiles)
type(c(quartiles))
typeof(c(quartiles))
# 2b)
findInterval(inner$gdp)
quartiles
# 2b)
?quantile
?findInterval
# 2b)
findInterval(inner$gdp, quantiles, rightmost.closed = TRUE)
quantiles[1]
# 2a)
quantiles = quantile(inner$gdp)
quantiles
quantiles[1]
# 2b)
findInterval(inner$gdp, quantiles[2], rightmost.closed = TRUE)
# 2b)
findInterval(inner$gdp, quantiles, rightmost.closed = TRUE)
# 2b)
findInterval(inner$gdp, quantiles, rightmost.closed = TRUE)
gdp.q
# 2b)
gdp.q = findInterval(inner$gdp, quantiles, rightmost.closed = TRUE)
gdp.q
tibble(gdp.q)
table(gdp.q)
?table
table(gdp.q)
# 2c)
rev_gdp.q = factor(gdp.q,levels = 4:1)
table(rev_gdp.q)
factor(gdp.q)
typeof(gdp.q)
gdp.q
# 2d)
head(table(gdp.q))
# 2a)
data = inner %>%
select(gdp, latitude)
# 2a)
data = inner %>%
select(gdp, lat)
quantiles = quantile(data$gdp)
quantiles
# 2b)
gdp.q = findInterval(data$gdp, quantiles, rightmost.closed = TRUE)
table(gdp.q)
# 2c)
rev_gdp.q = factor(gdp.q,levels = 4:1)
table(rev_gdp.q)
?quantile
View(data)
# 2d)
q1 = data %>%
filter(gdp < quantiles[1])
q1
# 2d)
q1 = data %>%
filter(gdp < quantiles[2])
q1
q1.lat
q1.lat = mean(q1$lat)
q1.lat
q2 = data %>%
filter(gdp < quantiles[3])
q2.lat = mean(q2$lat)
q2.lat
q3 = data %>%
filter(gdp < quantiles[4])
q3.lat = mean(q3$lat)
q3.lat
quantiles
q2 = data %>%
filter(gdp <= quantiles[3] && gdp >= quantiles[2])
q2.lat = mean(q2$lat)
q2.lat
q2 = data %>%
filter(gdp >= quantiles[2] && gdp <= quantiles[3])
q2.lat = mean(q2$lat)
q2.lat
q2 = data %>%
filter(gdp >= quantiles[2] & gdp <= quantiles[3])
q2.lat = mean(q2$lat)
q2.lat
q1.lat
q2 = data %>%
filter(gdp >= quantiles[2] & gdp <= quantiles[3])
q2.lat = mean(q2$lat)
# 2d)
q1 = data %>%
filter(gdp <= quantiles[2])
q1.lat = mean(q1$lat)
q1.lat
q2 = data %>%
filter(gdp >= quantiles[2] & gdp <= quantiles[3])
q2.lat = mean(q2$lat)
q2.lat
q3 = data %>%
filter(gdp >= quantiles[3] & gdp <= quantiles[4])
q3.lat = mean(q3$lat)
q3.lat
q4 = data %>%
filter(gdp >= quantiles[4] & gdp <= quantiles[5])
q4.lat = mean(q4$lat)
q4.lat
q1.lat
q2.lat
q3.lat
q4.lat
View(data)
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tibble)
library(dplyr)
load("map.coords.RData")
ccA = read.csv("ccA.csv")
ccB = read.csv("ccB.csv")
gdp = read.csv("gdp.csv")
# Task 5
df = merge(ccA, ccB, all = TRUE)
df2 = cbind(df, gdp)
# Problem 1 ####
left = merge(df2, coords, all.x = TRUE)
right = merge(df2, coords, all.y = TRUE)
inner = merge(df2, coords, all = FALSE)
dim(left)
dim(right)
dim(inner)
# Problem 2 ####
# 2a)
data = inner %>%
select(gdp, lat)
quantiles = quantile(data$gdp)
quantiles
# 2b)
gdp.q = findInterval(data$gdp, quantiles, rightmost.closed = TRUE)
table(gdp.q)
# 2c)
rev_gdp.q = factor(gdp.q,levels = 4:1)
table(rev_gdp.q)
# 2d)
q1 = data %>%
filter(gdp <= quantiles[2])
q1.lat = mean(abs(q1$lat))
q1.lat
q2 = data %>%
filter(gdp >= quantiles[2] & gdp <= quantiles[3])
q2.lat = mean(abs(q2$lat))
q2.lat
q3 = data %>%
filter(gdp >= quantiles[3] & gdp <= quantiles[4])
q3.lat = mean(abs(q3$lat))
q3.lat
q4 = data %>%
filter(gdp >= quantiles[4] & gdp <= quantiles[5])
q4.lat = mean(abs(q4$lat))
q4.lat
head(gdp.q)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tibble)
library(dplyr)
load("map.coords.RData")
ccA = read.csv("ccA.csv")
ccB = read.csv("ccB.csv")
gdp = read.csv("gdp.csv")
# Task 5
df = merge(ccA, ccB, all = TRUE)
df2 = cbind(df, gdp)
# Problem 1 ####
left = merge(df2, coords, all.x = TRUE)
right = merge(df2, coords, all.y = TRUE)
inner = merge(df2, coords, all = FALSE)
dim(left)
dim(right)
dim(inner)
# 2a)
data = inner %>%
select(gdp, lat)
quantiles = quantile(data$gdp)
quantiles
# 2b)
gdp.q = findInterval(data$gdp, quantiles, rightmost.closed = TRUE)
table(gdp.q)
# 2c)
rev_gdp.q = factor(gdp.q,levels = 4:1)
table(rev_gdp.q)
# 2d)
q1 = data %>%
filter(gdp <= quantiles[2])
q1.lat = mean(abs(q1$lat))
q1.lat
q2 = data %>%
filter(gdp >= quantiles[2] & gdp <= quantiles[3])
q2.lat = mean(abs(q2$lat))
q2.lat
q3 = data %>%
filter(gdp >= quantiles[3] & gdp <= quantiles[4])
q3.lat = mean(abs(q3$lat))
q3.lat
q4 = data %>%
filter(gdp >= quantiles[4] & gdp <= quantiles[5])
q4.lat = mean(abs(q4$lat))
q4.lat
